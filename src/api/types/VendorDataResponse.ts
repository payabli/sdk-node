/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../index.js";

/**
 * @example
 *     {
 *         VendorNumber: "1234",
 *         Name1: "Herman's Coatings and Masonry",
 *         Name2: "",
 *         EIN: "XXXX6789",
 *         Phone: "5555555555",
 *         Email: "contact@hermanscoatings.com",
 *         RemitEmail: undefined,
 *         Address1: "123 Ocean Drive",
 *         Address2: "Suite 400",
 *         City: "Miami",
 *         State: "FL",
 *         Zip: "33139",
 *         Country: "US",
 *         Mcc: "7777",
 *         LocationCode: "MIA123",
 *         Contacts: [{
 *                 ContactName: "Herman Martinez",
 *                 ContactEmail: "herman@hermanscoatings.com",
 *                 ContactTitle: "Owner",
 *                 ContactPhone: "3055550000"
 *             }],
 *         BillingData: {
 *             id: 123,
 *             accountId: undefined,
 *             nickname: "Checking Account",
 *             bankName: "Country Bank",
 *             routingAccount: "123123123",
 *             accountNumber: "1XXXXXX3123",
 *             typeAccount: "Checking",
 *             bankAccountHolderName: "Gruzya Adventure Outfitters LLC",
 *             bankAccountHolderType: "Business",
 *             bankAccountFunction: 0,
 *             verified: true,
 *             status: 1,
 *             services: [],
 *             "default": true
 *         },
 *         PaymentMethod: Payabli.VendorDataResponsePaymentMethod.Vcard,
 *         VendorStatus: 1,
 *         VendorId: 1234,
 *         EnrollmentStatus: undefined,
 *         Summary: {
 *             ActiveBills: 5,
 *             PendingBills: 2,
 *             InTransitBills: 1,
 *             PaidBills: 10,
 *             OverdueBills: 0,
 *             ApprovedBills: 3,
 *             DisapprovedBills: 0,
 *             TotalBills: 21,
 *             ActiveBillsAmount: 1500,
 *             PendingBillsAmount: 500,
 *             InTransitBillsAmount: 200,
 *             PaidBillsAmount: 3000,
 *             OverdueBillsAmount: 0,
 *             ApprovedBillsAmount: 800,
 *             DisapprovedBillsAmount: 0,
 *             TotalBillsAmount: 6000
 *         },
 *         PaypointLegalname: "Gruzya Adventure Outfitters LLC",
 *         PaypointDbaname: "Gruzya Adventure Outfitters",
 *         PaypointEntryname: "41035afaa7",
 *         ParentOrgName: "Pilgrim Planner",
 *         ParentOrgId: 1232,
 *         CreatedDate: "2022-07-01T15:00:01Z",
 *         LastUpdated: "2022-07-01T15:00:01Z",
 *         remitAddress1: "123 Walnut Street",
 *         remitAddress2: "Suite 900",
 *         remitCity: "Miami",
 *         remitState: "FL",
 *         remitZip: "31113",
 *         remitCountry: "US",
 *         payeeName1: "Herman Martinez",
 *         payeeName2: "",
 *         customField1: "",
 *         customField2: "",
 *         customerVendorAccount: "A-37622",
 *         InternalReferenceId: 123,
 *         additionalData: {
 *             "customField": "Custom Value 1",
 *             "reference": "REF-12345",
 *             "notes": "Additional vendor information"
 *         },
 *         externalPaypointID: "ext123",
 *         StoredMethods: []
 *     }
 */
export interface VendorDataResponse {
    VendorNumber: Payabli.VendorNumber;
    /** Primary name for vendor. */
    Name1: string;
    /** Secondary name for vendor. */
    Name2: string;
    /** EIN/Tax ID for vendor. In responses, this field is masked, and looks like: `"ein": "XXXXX6789"`. */
    EIN: string;
    /** Vendor's phone number. */
    Phone: string;
    Email: Payabli.Email;
    /** Email address for remittance */
    RemitEmail?: string;
    /** Vendor's address. */
    Address1: string;
    /** Additional line for vendor's address. */
    Address2: string;
    /** Vendor's city. */
    City: string;
    /** Vendor's state. Must be a two-character state code. */
    State: string;
    /** Vendor's zip code. */
    Zip: string;
    /** Vendor's country. Payabli supports only US and Canadian vendors. */
    Country: string;
    Mcc: Payabli.Mcc;
    LocationCode: Payabli.LocationCode;
    /** Array of objects describing the vendor's contacts. */
    Contacts: Payabli.ContactsResponse[];
    /** Object containing vendor's bank information. */
    BillingData: Payabli.VendorResponseBillingData;
    /** Preferred payment method for vendor. */
    PaymentMethod: VendorDataResponse.PaymentMethod;
    VendorStatus: Payabli.Vendorstatus;
    VendorId: Payabli.Vendorid;
    /** Vendor enrollment status */
    EnrollmentStatus?: string;
    /** Vendor bill summary statistics */
    Summary: Payabli.VendorResponseSummary;
    /** Legal name of the paypoint */
    PaypointLegalname: string;
    /** DBA name of the paypoint */
    PaypointDbaname: string;
    /** Entry name of the paypoint */
    PaypointEntryname: string;
    /** Name of the parent organization */
    ParentOrgName: string;
    /** ID of the parent organization */
    ParentOrgId: number;
    /** Date when vendor was created */
    CreatedDate: string;
    /** Date when vendor was last updated */
    LastUpdated: string;
    remitAddress1: Payabli.Remitaddress1;
    remitAddress2: Payabli.Remitaddress2;
    remitCity: Payabli.Remitcity;
    remitState: Payabli.Remitstate;
    remitZip: Payabli.Remitzip;
    remitCountry: Payabli.Remitcountry;
    payeeName1: Payabli.PayeeName;
    payeeName2: Payabli.PayeeName;
    /** Custom field 1 for vendor */
    customField1: string;
    /** Custom field 2 for vendor */
    customField2: string;
    /** Account number of paypoint in the Vendor side. */
    customerVendorAccount?: string;
    InternalReferenceId: Payabli.InternalReferenceId;
    additionalData: Payabli.AdditionalDataMap;
    /** External paypoint identifier */
    externalPaypointID: string;
    /** Array of stored payment methods for vendor */
    StoredMethods: Payabli.VendorResponseStoredMethod[];
}

export namespace VendorDataResponse {
    /**
     * Preferred payment method for vendor.
     */
    export type PaymentMethod = "vcard" | "ach" | "check" | "card";
    export const PaymentMethod = {
        Vcard: "vcard",
        Ach: "ach",
        Check: "check",
        Card: "card",
    } as const;
}
