/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../index.js";

export interface BillData {
    AdditionalData?: Payabli.AdditionalDataString;
    attachments?: Payabli.Attachments | undefined;
    /** Company name of the recipient of the invoice. */
    company?: string;
    discount?: Payabli.Discount | undefined;
    dutyAmount?: Payabli.DutyAmount | undefined;
    /** First name of the recipient of the invoice. */
    firstName?: string;
    freightAmount?: Payabli.FreightAmount | undefined;
    /** Frequency of scheduled invoice. */
    frequency?: Payabli.Frequency;
    invoiceAmount?: Payabli.InvoiceAmount;
    /** Invoice date in any of the accepted formats: YYYY-MM-DD, MM/DD/YYYY. */
    invoiceDate?: Payabli.Datenullable | undefined;
    /** Invoice due date in one of the accepted formats: YYYY-MM-DD, MM/DD/YYYY. */
    invoiceDueDate?: Payabli.Datenullable | undefined;
    /** Indicate the date to finish a scheduled invoice cycle (`invoiceType`` = 1) in any of the accepted formats: YYYY-MM-DD, MM/DD/YYYY. */
    invoiceEndDate?: Payabli.Datenullable | undefined;
    /** Invoice number. Identifies the invoice under a paypoint. */
    invoiceNumber?: Payabli.InvoiceNumber;
    invoiceStatus?: Payabli.Invoicestatus;
    invoiceType?: Payabli.InvoiceType;
    /** Array of line items included in the invoice. */
    items?: Payabli.BillItem[];
    /** Last name of the recipient of the invoice. */
    lastName?: string;
    /** Notes included in the invoice. */
    notes?: string;
    paymentTerms?: BillData.PaymentTerms;
    purchaseOrder?: Payabli.PurchaseOrder;
    shippingAddress1?: Payabli.Shippingaddress;
    shippingAddress2?: Payabli.Shippingaddressadditional;
    shippingCity?: Payabli.Shippingcity;
    shippingCountry?: Payabli.Shippingcountry;
    /** Shipping recipient's contact email address. */
    shippingEmail?: Payabli.Email;
    shippingFromZip?: Payabli.ShippingFromZip;
    /** Recipient phone number. */
    shippingPhone?: string;
    shippingState?: Payabli.Shippingstate;
    shippingZip?: Payabli.Shippingzip;
    summaryCommodityCode?: Payabli.SummaryCommodityCode;
    tax?: Payabli.Tax | undefined;
    termsConditions?: Payabli.TermsConditions;
}

export namespace BillData {
    /**
     * Payment terms for invoice. If no terms are defined, then response data for this field defaults to `NET30`.
     *
     * **Available Values:**
     *
     * - `PIA`: Payment in advance
     *
     * - `CIA`: Cash in advance
     *
     * - `UR`: Upon receipt
     *
     * - `NET10`: 10 days after invoice date
     *
     * - `NET20`: 20 days after invoice date
     *
     * - `NET30`: 30 days after invoice date
     *
     * - `NET45`: 45 days after invoice date
     *
     * - `NET60`: 60 days after invoice date
     *
     * - `NET90`: 90 days after invoice date
     *
     * - `EOM`: Due end of this month
     *
     * - `MFI`: 1st of the month following the invoice date
     *
     * - `5MFI`: 5th of the month following the invoice date
     *
     * - `10MFI`: 10th of the month following the invoice date
     *
     * - `15MFI`: 15th of the month following the invoice date
     *
     * - `20MFI`: 20th of the month following the invoice date
     *
     * - `2/10NET30`: 2% discount if paid within 10 days, otherwise net 30 days
     *
     * - `UF`: Until further notice
     *
     * - `10UF`: 10 days until further notice
     *
     * - `20UF`: 20 days until further notice
     *
     * - `25UF`: 25 days until further notice
     *
     * - `50UF`: 50 days until further notice
     */
    export type PaymentTerms =
        | "PIA"
        | "CIA"
        | "UR"
        | "NET10"
        | "NET20"
        | "NET30"
        | "NET45"
        | "NET60"
        | "NET90"
        | "EOM"
        | "MFI"
        | "5MFI"
        | "10MFI"
        | "15MFI"
        | "20MFI"
        | "2/10NET30"
        | "UF"
        | "10UF"
        | "20UF"
        | "25UF"
        | "50UF";
    export const PaymentTerms = {
        Pia: "PIA",
        Cia: "CIA",
        Ur: "UR",
        Net10: "NET10",
        Net20: "NET20",
        Net30: "NET30",
        Net45: "NET45",
        Net60: "NET60",
        Net90: "NET90",
        Eom: "EOM",
        Mfi: "MFI",
        FiveMfi: "5MFI",
        TenMfi: "10MFI",
        FifteenMfi: "15MFI",
        TwentyMfi: "20MFI",
        Two10Net30: "2/10NET30",
        Uf: "UF",
        TenUf: "10UF",
        TwentyUf: "20UF",
        TwentyFiveUf: "25UF",
        FiftyUf: "50UF",
    } as const;
}
