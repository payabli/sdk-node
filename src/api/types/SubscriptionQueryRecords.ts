/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../index.js";

export interface SubscriptionQueryRecords {
    /** Timestamp of when the subscription ws created, in UTC. */
    CreatedAt?: Payabli.CreatedAt;
    Customer?: Payabli.QueryTransactionPayorData;
    /** The subscription's end date. */
    EndDate?: Payabli.DatetimeNullable | undefined;
    EntrypageId?: Payabli.EntrypageId;
    ExternalPaypointID?: Payabli.ExternalPaypointId;
    /** Fee applied to the subscription. */
    FeeAmount?: number;
    /** The subscription's frequency. */
    Frequency?: string;
    /** The subscription's ID. */
    IdSub?: number;
    InvoiceData?: Payabli.BillData;
    /** The last time the subscription was processed. */
    LastRun?: Payabli.DatetimeNullable | undefined;
    /** The last date and time the subscription was updated. */
    LastUpdated?: Payabli.LastModified | undefined;
    /** The number of cycles the subscription has left. */
    LeftCycles?: number;
    /** The subscription's payment method. */
    Method?: string;
    /** The subscription amount, minus any fees. */
    NetAmount?: Payabli.Netamountnullable | undefined;
    /** The next date the subscription will be processed. */
    NextDate?: Payabli.DatetimeNullable | undefined;
    ParentOrgName?: Payabli.OrgParentName;
    PaymentData?: Payabli.QueryPaymentData;
    /** The paypoint's DBA name. */
    PaypointDbaname?: Payabli.Dbaname;
    /** The paypoint's entryname. */
    PaypointEntryname?: Payabli.Entrypointfield;
    PaypointId?: Payabli.PaypointId;
    /** The paypoint's legal name. */
    PaypointLegalname?: Payabli.Legalname;
    /** Payment plan ID. */
    PlanId?: number;
    Source?: Payabli.Source;
    /** The subscription start date. */
    StartDate?: Payabli.DatetimeNullable | undefined;
    /** Events associated with the subscription. */
    SubEvents?: Payabli.GeneralEvents[];
    /**
     * The subscription's status.
     * - 0: Paused
     * - 1: Active
     */
    SubStatus?: number;
    /** The subscription amount, including any fees. */
    TotalAmount?: number;
    /** The total number of cycles the subscription is set to run. */
    TotalCycles?: number;
    /** When `true`, the subscription has no explicit end date and will run until canceled. */
    UntilCancelled?: boolean;
}
