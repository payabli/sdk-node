/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../index.js";

/**
 * @example
 *     {
 *         Records: [{
 *                 BatchNumber: "BT-2024321",
 *                 Bills: [{}],
 *                 CardToken: "CardToken",
 *                 CheckNumber: "12345",
 *                 Comments: "Deposit for materials",
 *                 CreatedAt: "2022-07-01T15:00:01Z",
 *                 EntryName: "d193cf9a46",
 *                 Events: [{}],
 *                 externalPaypointID: "Paypoint-100",
 *                 FeeAmount: 10.25,
 *                 Gateway: "TSYS",
 *                 IdOut: 236,
 *                 LastUpdated: "2022-07-01T15:00:01Z",
 *                 NetAmount: 3762.87,
 *                 ParentOrgName: "PropertyManager Pro",
 *                 PaymentData: {
 *                     paymentDetails: {
 *                         totalAmount: 100
 *                     }
 *                 },
 *                 PaymentId: "12345678910",
 *                 PaymentMethod: "ach",
 *                 PaymentStatus: "Processed",
 *                 PaypointDbaname: "Sunshine Gutters",
 *                 PaypointLegalname: "Sunshine Services, LLC",
 *                 Source: "api",
 *                 Status: 1,
 *                 TotalAmount: 110.25,
 *                 Vendor: {
 *                     additionalData: {
 *                         "key1": {
 *                             "key": "value"
 *                         },
 *                         "key2": {
 *                             "key": "value"
 *                         },
 *                         "key3": {
 *                             "key": "value"
 *                         }
 *                     },
 *                     CreatedDate: "2022-07-01T15:00:01Z"
 *                 }
 *             }],
 *         Summary: {
 *             totalPages: 391,
 *             totalRecords: 7803,
 *             totalAmount: 21435.95,
 *             totalNetAmount: 21435.95,
 *             totalPaid: 1,
 *             totalPaidAmount: 4,
 *             totalCanceled: 1743,
 *             totalCanceledAmount: 4515,
 *             totalCaptured: 138,
 *             totalCapturedAmount: 542,
 *             totalAuthorized: 4139,
 *             totalAuthorizedAmount: 11712.35,
 *             totalProcessing: 1780,
 *             totalProcessingAmount: 4660.6,
 *             totalOpen: 2,
 *             totalOpenAmount: 2,
 *             totalOnHold: 0,
 *             totalOnHoldAmount: 0,
 *             pageSize: 20
 *         }
 *     }
 */
export interface QueryPayoutTransaction {
    Records?: QueryPayoutTransaction.Records.Item[];
    Summary?: QueryPayoutTransaction.Summary;
}

export namespace QueryPayoutTransaction {
    export type Records = Records.Item[];

    export namespace Records {
        export interface Item {
            BatchNumber?: Payabli.BatchNumber;
            /** Identifier of the batch associated with payout transaction. */
            BatchId?: number;
            /** Events associated with this transaction. */
            Bills?: Payabli.BillPayOutData[];
            CardToken?: string;
            /** Object referencing paper check image. */
            CheckData?: Payabli.FileContent;
            /** Paper check number related to payout transaction. */
            CheckNumber?: string;
            /** Any comment or description for payout transaction. */
            Comments?: Payabli.Comments;
            /** Timestamp when the payment was created, in UTC. */
            CreatedAt?: Payabli.CreatedAt;
            EntryName?: Payabli.Entrypointfield;
            /** Events associated with this transaction. */
            Events?: Payabli.QueryTransactionEvents[];
            externalPaypointID?: Payabli.ExternalPaypointId;
            FeeAmount?: Payabli.FeeAmount;
            Gateway?: Payabli.Gatewayfield;
            HasVcardTransactions?: Payabli.HasVcardTransactions | undefined;
            /** Identifier of payout transaction. */
            IdOut?: number;
            IsSameDayACH?: Payabli.IsSameDayAch | undefined;
            /** Timestamp when payment record was updated. */
            LastUpdated?: Payabli.LastModified | undefined;
            /** Net amount paid. */
            NetAmount?: Payabli.Netamountnullable | undefined;
            ParentOrgName?: Payabli.OrgParentName;
            ParentOrgId?: Payabli.OrgParentId;
            PaymentData?: Item.PaymentData;
            PaymentId?: Payabli.PaymentIdString;
            /** The payment method for the transaction. */
            PaymentMethod?: string;
            /** Status of payout transaction. See [Payout Transaction Statuses](guides/money-out-statuses#payout-transaction-statuses) for a full reference. */
            PaymentStatus?: string;
            PayoutProgram?: Payabli.PayoutProgram;
            PaypointDbaname?: Payabli.Dbaname;
            /** Paypoint legal name. */
            PaypointLegalname?: Payabli.Legalname;
            RiskAction?: Payabli.RiskAction;
            RiskActionCode?: Payabli.RiskActionCode | undefined;
            RiskFlagged?: Payabli.RiskFlagged | undefined;
            RiskFlaggedOn?: Payabli.RiskFlaggedOn | undefined;
            RiskReason?: Payabli.RiskReason;
            RiskStatus?: Payabli.RiskStatus;
            ScheduleId?: Payabli.ScheduleId;
            SettlementStatus?: Payabli.SettlementStatusPayout;
            Source?: Payabli.Source;
            /** Internal status of transaction. */
            Status?: number;
            /** Transaction total amount (including service fee or sub-charge). */
            TotalAmount?: number;
            /** Vendor related to the payout transaction. */
            Vendor?: Payabli.VendorQueryRecord;
        }

        export namespace Item {
            export interface PaymentData {
                AccountExp?: Payabli.Accountexp;
                accountId?: Payabli.Accountid;
                AccountType?: Payabli.Accounttype;
                AccountZip?: Payabli.Accountzip;
                bankAccount?: string;
                binData?: Payabli.BinData;
                cloudSignatureData?: string;
                cloudSignatureFormat?: string;
                gatewayConnector?: Payabli.PayoutGatewayConnector;
                /** Card or bank account holder name. */
                HolderName?: Payabli.Holdername;
                Initiator?: Payabli.Initiator;
                MaskedAccount?: Payabli.Maskedaccount;
                orderDescription?: Payabli.Orderdescription;
                paymentDetails?: Payabli.PaymentDetail;
                payorData?: string;
                Sequence?: Payabli.Sequence;
                /** Identifier of stored payment method used in transaction. */
                StoredId?: Payabli.Storedmethodid;
                StoredMethodUsageType?: Payabli.StoredMethodUsageType;
            }
        }
    }

    export interface Summary {
        pageIdentifier?: Payabli.PageIdentifier;
        pageSize?: Payabli.Pagesize;
        totalAmount?: number;
        totalAuthorized?: number;
        totalAuthorizedAmount?: number;
        totalCanceled?: number;
        totalCanceledAmount?: number;
        totalCaptured?: number;
        totalCapturedAmount?: number;
        totalNetAmount?: number;
        totalOpen?: number;
        totalOpenAmount?: number;
        totalPages?: number;
        totalPaid?: number;
        totalPaidAmount?: number;
        /** Total number of transactions that are currently on hold. */
        totalOnHold?: number;
        /** Total amount of transactions that are currently on hold. */
        totalOnHoldAmount?: number;
        totalProcessing?: number;
        totalProcessingAmount?: number;
        totalRecords?: number;
    }
}
