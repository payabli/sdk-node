/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../../../index.js";

export interface QueryTransferDetailResponse {
    /** List of transfer detail records */
    Records?: QueryTransferDetailResponse.Records.Item[];
    /** Summary of the transfer details query */
    Summary?: Payabli.QueryTransferSummary;
}

export namespace QueryTransferDetailResponse {
    export type Records = Records.Item[];

    export namespace Records {
        export interface Item {
            /** Unique identifier for the transfer detail record */
            transferDetailId?: number;
            /** The ID of the transfer this detail belongs to */
            transferId?: number;
            /** The transaction ID in Payabli's system */
            transactionId?: string;
            /** External transaction reference number */
            transactionNumber?: string;
            /** The transaction type (credit or debit) */
            type?: string;
            /** A field used to categorize the transaction details. Values include: auth, decline, refund, adj, cb, split */
            category?: string;
            /** The gross amount of the transaction */
            grossAmount?: number;
            /** Chargeback amount deducted from transaction */
            chargeBackAmount?: number;
            /** ACH return amount deducted from transaction */
            returnedAmount?: number;
            /** Refund amount deducted from transaction */
            refundAmount?: number;
            /** Amount being held for fraud or risk concerns */
            holdAmount?: number;
            /** Previously held funds that have been released after a risk review */
            releasedAmount?: number;
            /** Charges applied for transactions and services */
            billingFeesAmount?: number;
            /** Payments captured in the batch cycle that are deposited separately. For example,  checks or cash payments recorded in the batch but not deposited via Payabli,  or card brands making a direct transfer in certain situations. */
            thirdPartyPaidAmount?: number;
            /** Corrections applied to Billing & Fees charges */
            adjustmentsAmount?: number;
            /** The net amount after all deductions */
            netTransferAmount?: number;
            /** Total amount directed to split funding destinations */
            splitFundingAmount?: number;
            billingFeesDetails?: Payabli.BillingFeeDetail[];
            ParentOrgName?: Payabli.OrgParentName;
            PaypointDbaname?: Payabli.Dbaname;
            PaypointLegalname?: Payabli.Legalname;
            /** The paypoint's entryname */
            PaypointEntryname?: string;
            /** The transaction ID for the payment */
            PaymentTransId?: string;
            /** The payment connector used to process the transaction */
            ConnectorName?: string;
            ExternalProcessorInformation?: Payabli.ExternalProcessorInformation;
            /** Internal identifier used for processing */
            GatewayTransId?: string;
            OrderId?: Payabli.OrderId;
            /** Payment method used: card, ach, or wallet */
            Method?: string;
            BatchNumber?: Payabli.BatchNumber;
            /** The amount of the batch */
            BatchAmount?: number;
            /** Unique ID for customer linked to the transaction */
            PayorId?: Payabli.PayorId;
            PaymentData?: Payabli.QueryPaymentData;
            /**
             * Status of transaction. See [the
             * docs](/developers/references/money-in-statuses#money-in-transaction-status) for a
             * full reference.
             */
            TransStatus?: number;
            PaypointId?: Payabli.PaypointId;
            /** Transaction total amount (including service fee or sub-charge) */
            TotalAmount?: number;
            /** Net amount paid */
            NetAmount?: Payabli.Netamountnullable | undefined;
            FeeAmount?: Payabli.FeeAmount;
            /** Settlement status for transaction. See [the docs](/developers/references/money-in-statuses#payment-funding-status) for a full reference. */
            SettlementStatus?: number;
            Operation?: Payabli.Operation;
            ResponseData?: Payabli.QueryResponseData;
            Source?: Payabli.Source;
            /** Reference to the subscription or schedule that originated the transaction */
            ScheduleReference?: number;
            OrgId?: Payabli.Orgid;
            RefundId?: Payabli.RefundId;
            ReturnedId?: Payabli.ReturnedId;
            ChargebackId?: Payabli.ChargebackId;
            RetrievalId?: Payabli.RetrievalId;
            /** Additional transaction data */
            TransAdditionalData?: unknown;
            /** Associated invoice data */
            invoiceData?: Payabli.BillData;
            EntrypageId?: Payabli.EntrypageId;
            externalPaypointID?: Payabli.ExternalPaypointId;
            /** Indicates whether the ACH account has been validated */
            IsValidatedACH?: boolean;
            /** Transaction date and time, in UTC */
            TransactionTime?: Payabli.DatetimeNullable | undefined;
            Customer?: Payabli.QueryTransactionPayorData;
            splitFundingInstructions?: Payabli.SplitFunding | undefined;
            CfeeTransactions?: Payabli.QueryCFeeTransaction[];
            TransactionEvents?: Payabli.QueryTransactionEvents[];
            PendingFeeAmount?: Payabli.PendingFeeAmount | undefined;
            RiskFlagged?: Payabli.RiskFlagged | undefined;
            RiskFlaggedOn?: Payabli.RiskFlaggedOn | undefined;
            RiskStatus?: Payabli.RiskStatus;
            RiskReason?: Payabli.RiskReason;
            RiskAction?: Payabli.RiskAction;
            RiskActionCode?: Payabli.RiskActionCode | undefined;
            DeviceId?: Payabli.DeviceId | undefined;
            AchSecCode?: Payabli.AchSecCode;
            AchHolderType?: Payabli.AchHolderType;
            IpAddress?: Payabli.IpAddress;
            /** Indicates if this was a same-day ACH transaction. */
            IsSameDayACH?: boolean;
            /** Type of wallet used for the transaction (if applicable) */
            WalletType?: string;
        }
    }
}
