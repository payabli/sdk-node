/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../../../index.js";

/**
 * Response body for queries about batch details.
 */
export interface QueryBatchesDetailResponse {
    Records: QueryBatchesDetailResponse.Records.Item[];
    Summary: QueryBatchesDetailResponse.Summary;
}

export namespace QueryBatchesDetailResponse {
    export type Records = Records.Item[];

    export namespace Records {
        export interface Item {
            Id: number;
            Method: string;
            WalletType: string | null;
            SettledAmount: number;
            Type: string;
            BatchNumber: Payabli.BatchNumber;
            BatchAmount: number;
            PaymentTransId: string;
            PaymentTransStatus: number;
            ScheduleReference: number;
            GatewayTransId: string;
            OrderId: Payabli.OrderId;
            TransMethod: string;
            PaymentData: Payabli.QueryPaymentData | null;
            NetAmount?: Payabli.Netamountnullable;
            Operation: Payabli.Operation;
            Category: Payabli.Category;
            Source: Payabli.Source | null;
            Status: number;
            TransactionTime: Payabli.TransactionTime;
            Customer: Payabli.QueryTransactionPayorData | null;
            SettlementDate: string;
            PaymentSettlementStatus: number;
            BatchStatus: number;
            DepositDate: Payabli.DepositDate;
            ExpectedDepositDate: Payabli.ExpectedDepositDate;
            MaskedAccount: Payabli.Maskedaccount;
            CreatedAt: Payabli.CreatedAt;
            PaypointLegalname: Payabli.Legalname;
            ResponseData: Payabli.QueryResponseData | null;
            PaypointDbaname: Payabli.Dbaname;
            ParentOrgName: Payabli.OrgParentName;
            ParentOrgId: number;
            PaypointEntryname: Payabli.Entrypointfield;
            DeviceId: Payabli.Device | null;
            RetrievalId: Payabli.RetrievalId;
            ChargebackId: Payabli.ChargebackId;
            AchHolderType: Payabli.AchHolderType;
            AchSecCode: Payabli.AchSecCode;
            ConnectorName: string;
            EntrypageId: Payabli.EntrypageId;
            FeeAmount: Payabli.FeeAmount;
            OrgId: Payabli.Orgid;
            PayorId: Payabli.PayorId;
            PaypointId: Payabli.PaypointId;
            PendingFeeAmount?: Payabli.PendingFeeAmount;
            RefundId: Payabli.RefundId;
            ReturnedId: Payabli.ReturnedId;
            splitFundingInstructions?: Payabli.SplitFunding;
            TotalAmount: number;
            CfeeTransactions: Payabli.QueryCFeeTransaction[];
            invoiceData: Payabli.BillData | null;
            TransactionEvents: Payabli.QueryTransactionEvents[];
            externalPaypointID: Payabli.ExternalPaypointId;
            isHold: number;
        }
    }

    export interface Summary {
        serviceFees: number;
        transferAmount: number;
        refunds: number;
        heldAmount: number;
        totalRecords: Payabli.Totalrecords;
        totalAmount: number;
        totalNetAmount: number;
        totalPages: Payabli.Totalpages;
        pageSize: Payabli.Pagesize;
        pageidentifier: Payabli.PageIdentifier | null;
    }
}
