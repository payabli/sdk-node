/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         fromRecord: 251,
 *         limitRecord: 0,
 *         sortBy: "desc(field_name)"
 *     }
 */
export interface ListUsersOrgRequest {
    /** The number of records to skip before starting to collect the result set. */
    fromRecord?: number;
    /** Max number of records to return for the query. Use `0` or negative value to return all records. */
    limitRecord?: number;
    /**
     * Collection of field names, conditions, and values used to filter the query.
     * <Info>
     *   **You must remove `parameters=` from the request before you send it, otherwise Payabli will ignore the filters.**
     *
     *   Because of a technical limitation, you can't make a request that includes filters from the API console on this page. The response won't be filtered. Instead, copy the request, remove `parameters=` and run the request in a different client.
     *
     *   For example:
     *
     *   --url https://api-sandbox.payabli.com/api/Query/transactions/org/236?parameters=totalAmount(gt)=1000&limitRecord=20
     *
     *   should become:
     *
     *   --url https://api-sandbox.payabli.com/api/Query/transactions/org/236?totalAmount(gt)=1000&limitRecord=20
     * </Info>
     * See [Filters and Conditions Reference](/developers/developer-guides/pay-ops-reporting-engine-overview#filters-and-conditions-reference) for help.
     *
     * **List of field names accepted:**
     *
     * - `createdDate` (gt, ge, lt, le, eq, ne)
     * - `name`  (ne, eq, ct, nct)
     * - `email`  (ne, eq, ct, nct)
     * - `status`   (in, nin, eq, ne)
     * - `role.xxx`  (ne, eq, ct, nct) where xxx is the role field: `roleLabel` or `roleValue`
     *
     * **List of comparison accepted - enclosed between parentheses:**
     *
     * - `eq` or empty => equal
     * - `gt` => greater than
     * - `ge` => greater or equal
     * - `lt` => less than
     * - `le` => less or equal
     * - `ne` => not equal
     * - `ct` => contains
     * - `nct` => not contains
     * - `in` => inside array separated by "|"
     * - `nin` => not inside array separated by "|"
     *
     * **List of parameters accepted:**
     * - `limitRecord`: max number of records for query (default="20", "0" or negative value for all)
     * - `fromRecord`: initial record in query
     *
     * Example: `name(ct)=john`  return all records with name containing 'john'.
     */
    parameters?: Record<string, string | undefined>;
    /** The field name to use for sorting results. Use `desc(field_name)` to sort descending by `field_name`, and use `asc(field_name)` to sort ascending by `field_name`. */
    sortBy?: string;
}
