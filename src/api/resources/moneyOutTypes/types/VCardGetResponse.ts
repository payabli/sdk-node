/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../../../index.js";

export interface VCardGetResponse {
    /** Indicates if the virtual card was sent. */
    vcardSent?: boolean;
    /** A unique token identifier for the card. */
    cardToken?: string;
    /** The masked number of the card. */
    cardNumber?: string;
    /** Masked Card Verification Code. */
    cvc?: string;
    /** The expiration date of the card. */
    expirationDate?: string;
    /** The current status of the card. */
    status?: string;
    /** The initial amount loaded on the card. */
    amount?: number;
    /** The current balance available on the card. */
    currentBalance?: number;
    /** The set limit for expenses. */
    expenseLimit?: number;
    /** The period for the expense limit. */
    expenseLimitPeriod?: string;
    /** Maximum number of uses allowed for the card. */
    maxNumberOfUses?: number;
    /** The current number of times the card has been used. */
    currentNumberOfUses?: number;
    /** Indicates if only the exact amount is allowed for transactions. */
    exactAmount?: boolean;
    /** Merchant Category Code, if applicable. */
    mcc?: string;
    /** Transaction Category Code, if applicable. */
    tcc?: string;
    /** A miscellaneous field for additional information. */
    misc1?: string;
    /** Another miscellaneous field for extra information. */
    misc2?: string;
    /** The creation date of the record. */
    dateCreated?: string;
    /** The last modified date of the record. */
    dateModified?: string;
    /** Information about the associated vendor. */
    associatedVendor?: VCardGetResponse.AssociatedVendor;
    /** Information about the associated customer, if applicable. */
    associatedCustomer?: string;
    /** Name of the parent organization. */
    ParentOrgName?: string;
    /** The 'Doing Business As' name of the Paypoint. */
    PaypointDbaname?: string;
    /** The legal name of the Paypoint. */
    PaypointLegalname?: string;
    /** Entry name for the Paypoint, if applicable. */
    PaypointEntryname?: string;
    externalPaypointID?: Payabli.ExternalPaypointId;
    /** The unique identifier for the paypoint. */
    paypointId?: number;
}

export namespace VCardGetResponse {
    /**
     * Information about the associated vendor.
     */
    export interface AssociatedVendor {
        /** Unique code identifying the vendor. */
        VendorNumber?: string;
        /** The primary name associated with the vendor. */
        Name1?: string;
        /** Additional name information for the vendor. */
        Name2?: string;
        /** Employer Identification Number of the vendor. */
        EIN?: string;
        /** Contact phone number of the vendor. */
        Phone?: string;
        /** Contact email address of the vendor. */
        Email?: string;
        /** Email address for remittance. */
        RemitEmail?: string;
        /** Primary address line of the vendor. */
        Address1?: string;
        /** Secondary address line of the vendor. */
        Address2?: string;
        /** City where the vendor is located. */
        City?: string;
        /** State where the vendor is located. */
        State?: string;
        /** ZIP code for the vendor's location. */
        Zip?: string;
        /** Country where the vendor is located. */
        Country?: string;
        /** Merchant Category Code for the vendor. */
        Mcc?: string;
        LocationCode?: Payabli.LocationCode;
        /** Array of objects describing the vendor's contacts. */
        Contacts?: AssociatedVendor.Contacts.Item[];
        /** Billing data for the vendor. */
        BillingData?: AssociatedVendor.BillingData;
        /** Preferred payment method for vendor. */
        PaymentMethod?: string;
        /** Status of the vendor. */
        VendorStatus?: number;
        /** Unique identifier for the vendor. */
        VendorId?: number;
        /** Enrollment status of the vendor. */
        EnrollmentStatus?: string;
        /** Summary of vendor's billing and transaction status. */
        Summary?: AssociatedVendor.Summary;
        /** Legal name of the paypoint. */
        PaypointLegalname?: Payabli.Legalname;
        /** DBA name of the paypoint. */
        PaypointDbaname?: Payabli.Dbaname;
        /** Entryname of the paypoint. */
        PaypointEntryname?: string;
        ParentOrgName?: Payabli.OrgParentName;
        /** ID of the parent organization. */
        ParentOrgId?: number;
        /** Date when the vendor record was created. */
        CreatedDate?: string;
        /** Date when the vendor's information was last updated. */
        LastUpdated?: string;
        remitAddress1?: Payabli.Remitaddress1;
        remitAddress2?: Payabli.Remitaddress2;
        remitCity?: Payabli.Remitcity;
        remitState?: Payabli.Remitstate;
        remitZip?: Payabli.Remitzip;
        remitCountry?: Payabli.Remitcountry;
        /** Primary name of the payee. */
        payeeName1?: string;
        /** Secondary name of the payee. */
        payeeName2?: string;
        /** A custom field for additional data. */
        customField1?: string;
        /** Another custom field for extra data. */
        customField2?: string;
        /** Account number of paypoint in the vendor side. */
        customerVendorAccount?: string;
        /** Internal reference ID used within the system. */
        InternalReferenceId?: number;
        /** Field for additional data, if any. */
        additionalData?: string;
        externalPaypointID?: Payabli.ExternalPaypointId;
        /** Stored payment methods for the vendor. */
        StoredMethods?: string;
    }

    export namespace AssociatedVendor {
        export type Contacts = Contacts.Item[];

        export namespace Contacts {
            /**
             * Contact information structure.
             */
            export interface Item {
                /** Name of the contact. */
                ContactName?: string;
                /** Email of the contact. */
                ContactEmail?: string;
                /** Title of the contact. */
                ContactTitle?: string;
                /** Phone number of the contact. */
                ContactPhone?: string;
            }
        }

        /**
         * Billing data for the vendor.
         */
        export interface BillingData {
            /** Unique identifier for billing data. */
            id?: number;
            /** Account identifier. */
            accountId?: string;
            /** Nickname for the account. */
            nickname?: string;
            /** Name of the bank used for transactions. */
            bankName?: string;
            /** Routing number for the bank account. */
            routingAccount?: string;
            /** Masked account number for transactions. */
            accountNumber?: string;
            /** Type of the bank account. */
            typeAccount?: string;
            /** Name of the bank account holder. */
            bankAccountHolderName?: string;
            /** Type of bank account holder. */
            bankAccountHolderType?: string;
            /** Function of the bank account. */
            bankAccountFunction?: number;
            /** Indicates if the account is verified. */
            verified?: boolean;
            /** Status of the billing data. */
            status?: number;
            /** Services associated with the account. */
            services?: unknown[];
            /** Indicates if this is the default billing account. */
            default?: boolean;
        }

        /**
         * Summary of vendor's billing and transaction status.
         */
        export interface Summary {
            /** Number of active bills. */
            ActiveBills?: number;
            /** Number of bills pending approval or payment. */
            PendingBills?: number;
            /** Number of bills in transit. */
            InTransitBills?: number;
            /** Number of bills that have been paid. */
            PaidBills?: number;
            /** Number of bills that are overdue. */
            OverdueBills?: number;
            /** Number of bills that have been approved. */
            ApprovedBills?: number;
            /** Number of bills that have been disapproved. */
            DisapprovedBills?: number;
            /** Total number of bills. */
            TotalBills?: number;
            /** Total amount of active bills. */
            ActiveBillsAmount?: number;
            /** Total amount of pending bills. */
            PendingBillsAmount?: number;
            /** Total amount of bills in transit. */
            InTransitBillsAmount?: number;
            /** Total amount of paid bills. */
            PaidBillsAmount?: number;
            /** Total amount of overdue bills. */
            OverdueBillsAmount?: number;
            /** Total amount of approved bills. */
            ApprovedBillsAmount?: number;
            /** Total amount of rejected bills. */
            DisapprovedBillsAmount?: number;
            /** Total amount of all bills. */
            TotalBillsAmount?: number;
        }
    }
}
