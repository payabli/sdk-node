/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Payabli from "../../../index.js";

export interface AuthorizePayoutBody {
    entryPoint: Payabli.Entrypointfield;
    source?: Payabli.Source;
    orderId?: Payabli.OrderId;
    orderDescription?: Payabli.Orderdescription;
    paymentMethod: Payabli.AuthorizePaymentMethod;
    /** Object containing payment details. */
    paymentDetails: AuthorizePayoutBody.PaymentDetails;
    /** Object containing vendor data. */
    vendorData: AuthorizePayoutBody.VendorData;
    /** Array of bills associated to the transaction */
    invoiceData: AuthorizePayoutBody.InvoiceData.Item[];
    accountId?: Payabli.Accountid;
    subdomain?: Payabli.Subdomain;
    subscriptionId?: Payabli.Subscriptionid;
}

export namespace AuthorizePayoutBody {
    /**
     * Object containing payment details.
     */
    export interface PaymentDetails {
        checkNumber?: Payabli.VendorCheckNumber;
        /** Currency code ISO-4217. If not code is provided the currency in the paypoint setting is taken. Default is **USD**. */
        currency?: string;
        /** Service fee to be deducted from the total amount. This amount must be a number, percentages aren't accepted. If you are using a percentage-based fee schedule, you must calculate the value manually. */
        serviceFee?: number;
        /** Total amount to be charged. If a service fee is included, then this amount should include the service fee. */
        totalAmount?: number;
    }

    /**
     * Object containing vendor data.
     */
    export interface VendorData {
        vendorNumber?: Payabli.VendorNumber;
        name1?: Payabli.VendorName1;
        name2?: Payabli.VendorName2;
        ein?: Payabli.VendorEin;
        phone?: Payabli.VendorPhone | undefined;
        email?: Payabli.Email;
        address1?: Payabli.AddressNullable;
        city?: string;
        state?: string;
        zip?: string;
        country?: string;
        mcc?: Payabli.Mcc;
        contacts?: Payabli.ContactsField | undefined;
        billingData?: VendorData.BillingData;
        vendorStatus?: Payabli.Vendorstatus;
        remitAddress1?: Payabli.Remitaddress1;
        remitAddress2?: Payabli.Remitaddress2;
        remitCity?: Payabli.Remitcity;
        remitState?: Payabli.Remitstate;
        remitZip?: Payabli.Remitzip;
        remitCountry?: Payabli.Remitcountry;
        customerVendorAccount?: string;
        customField1?: string;
        customField2?: string;
        additionalData?: Payabli.AdditionalData;
        address2?: Payabli.AddressAddtlNullable;
        internalReferenceId?: number;
        locationCode?: Payabli.LocationCode;
        payeeName1?: Payabli.PayeeName;
        payeeName2?: Payabli.PayeeName;
        paymentMethod?: Payabli.VendorPaymentMethod;
        vendorId?: Payabli.Vendorid;
    }

    export namespace VendorData {
        /**
         * Object containing vendor's bank information. This object is deprecated for this endpoint. Use the `paymentMethod` object in payout authorize requests instead.
         */
        export interface BillingData {
            bankName?: Payabli.BankName;
            routingAccount?: Payabli.RoutingAccount;
            accountNumber?: Payabli.AccountNumber;
            typeAccount?: Payabli.TypeAccount;
            bankAccountHolderName?: Payabli.BankAccountHolderName;
        }
    }

    export type InvoiceData = InvoiceData.Item[];

    export namespace InvoiceData {
        export interface Item {
            invoiceNumber?: Payabli.InvoiceNumber;
            netAmount?: Payabli.NetAmountstring;
            /** Invoice date in any of the accepted formats: YYYY-MM-DD, MM/DD/YYYY. */
            invoiceDate?: Payabli.Datenullable | undefined;
            /** Invoice due date in any of the accepted formats: YYYY-MM-DD, MM/DD/YYYY. */
            dueDate?: Payabli.Datenullable | undefined;
            comments?: Payabli.Comments;
            lotNumber?: Payabli.LotNumber;
            billId?: Payabli.BillId;
            discount?: Payabli.Discount | undefined;
            terms?: Payabli.Terms;
            accountingField1?: Payabli.AccountingField;
            accountingField2?: Payabli.AccountingField;
            additionalData?: Payabli.AdditionalDataString;
            attachments?: Payabli.Attachments | undefined;
        }
    }
}
