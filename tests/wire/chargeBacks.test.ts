/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { PayabliClient } from "../../src/Client";
import * as Payabli from "../../src/api/index";

describe("ChargeBacks", () => {
    test("AddResponse (General success response example for chargebacks.)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = { isSuccess: true, responseData: 126, responseText: "Success" };
        server
            .mockEndpoint()
            .post("/ChargeBacks/response/1000000")
            .header("idempotencyKey", "6B29FC40-CA47-1067-B31D-00DD010662DA")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.chargeBacks.addResponse(1000000, {
            idempotencyKey: "6B29FC40-CA47-1067-B31D-00DD010662DA",
        });
        expect(response).toEqual({
            isSuccess: true,
            responseData: 126,
            responseText: "Success",
        });
    });

    test("AddResponse (33319e38)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            attachments: undefined,
            contactEmail: undefined,
            contactName: undefined,
            notes: undefined,
        };
        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .post("/ChargeBacks/response/1000000")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(400)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.addResponse(1000000, {
                attachments: undefined,
                contactEmail: undefined,
                contactName: undefined,
                notes: undefined,
            });
        }).rejects.toThrow(
            new Payabli.BadRequestError({
                key: "value",
            }),
        );
    });

    test("AddResponse (4122aae0)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            attachments: undefined,
            contactEmail: undefined,
            contactName: undefined,
            notes: undefined,
        };
        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .post("/ChargeBacks/response/1000000")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(401)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.addResponse(1000000, {
                attachments: undefined,
                contactEmail: undefined,
                contactName: undefined,
                notes: undefined,
            });
        }).rejects.toThrow(
            new Payabli.UnauthorizedError({
                key: "value",
            }),
        );
    });

    test("AddResponse (2eeffa74)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            attachments: undefined,
            contactEmail: undefined,
            contactName: undefined,
            notes: undefined,
        };
        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .post("/ChargeBacks/response/1000000")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(500)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.addResponse(1000000, {
                attachments: undefined,
                contactEmail: undefined,
                contactName: undefined,
                notes: undefined,
            });
        }).rejects.toThrow(
            new Payabli.InternalServerError({
                key: "value",
            }),
        );
    });

    test("AddResponse (d57f056b)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            attachments: undefined,
            contactEmail: undefined,
            contactName: undefined,
            notes: undefined,
        };
        const rawResponseBody = { isSuccess: undefined, responseData: undefined, responseText: undefined };
        server
            .mockEndpoint()
            .post("/ChargeBacks/response/1000000")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(503)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.addResponse(1000000, {
                attachments: undefined,
                contactEmail: undefined,
                contactName: undefined,
                notes: undefined,
            });
        }).rejects.toThrow(
            new Payabli.ServiceUnavailableError({
                isSuccess: undefined,
                responseData: undefined,
                responseText: undefined,
            }),
        );
    });

    test("GetChargeback (267ff551)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            accountType: "visa",
            caseNumber: "TZ45678",
            chargebackDate: "2022-06-25T00:00:00Z",
            createdAt: "2022-07-01T15:00:01Z",
            customer: {
                AdditionalData: "AdditionalData",
                BillingAddress1: "1111 West 1st Street",
                BillingAddress2: "Suite 200",
                BillingCity: "Miami",
                BillingCountry: "US",
                BillingEmail: "example@email.com",
                BillingPhone: "5555555555",
                BillingState: "FL",
                BillingZip: "45567",
                CompanyName: "Sunshine LLC",
                customerId: 4440,
                CustomerNumber: "3456-7645A",
                customerStatus: 1,
                FirstName: "John",
                Identifiers: ['\\"firstname\\"', '\\"lastname\\"', '\\"email\\"', '\\"customId\\"'],
                LastName: "Doe",
                ShippingAddress1: "123 Walnut St",
                ShippingAddress2: "STE 900",
                ShippingCity: "Johnson City",
                ShippingCountry: "US",
                ShippingState: "TN",
                ShippingZip: "37619",
            },
            id: 201,
            lastFour: "6789",
            method: "card",
            netAmount: 3762.87,
            orderId: "O-5140",
            parentOrgName: "PropertyManager Pro",
            paymentData: {
                AccountExp: "11/29",
                accountId: "accountId",
                AccountType: "visa",
                AccountZip: "90210",
                binData: {
                    binMatchedLength: "6",
                    binCardBrand: "Visa",
                    binCardType: "Credit",
                    binCardCategory: "PLATINUM",
                    binCardIssuer: "Bank of Example",
                    binCardIssuerCountry: "United States",
                    binCardIssuerCountryCodeA2: "US",
                    binCardIssuerCountryNumber: "840",
                    binCardIsRegulated: "false",
                    binCardUseCategory: "Consumer",
                    binCardIssuerCountryCodeA3: "USA",
                },
                HolderName: "Chad Mercia",
                Initiator: "payor",
                MaskedAccount: "4XXXXXXXX1111",
                orderDescription: "Depost for materials for 123 Walnut St",
                paymentDetails: {
                    categories: [{ amount: 1000, label: "Deposit" }],
                    checkImage: { key: "value" },
                    checkNumber: "107",
                    currency: "USD",
                    serviceFee: 0,
                    splitFunding: [{}],
                    totalAmount: 100,
                },
                Sequence: "subsequent",
                SignatureData: "SignatureData",
                StoredId: "1ec55af9-7b5a-4ff0-81ed-c12d2f95e135-4440",
                StoredMethodUsageType: "subscription",
            },
            PaymentId: "34-ggghtt5678xxxxxxx-654",
            paypointDbaname: "Sunshine Gutters",
            paypointEntryname: "d193cf9a46",
            paypointLegalname: "Sunshine Services, LLC",
            reason: "Buyer dispute",
            reasonCode: "reasonCode",
            referenceNumber: "referenceNumber",
            responses: [
                {
                    contactEmail: "example@email.com",
                    contactName: "John Doe",
                    createdAt: "2022-07-01T15:00:01Z",
                    id: 672,
                    notes: "any note here",
                },
            ],
            status: 1,
            transaction: {
                AchHolderType: "personal",
                AchSecCode: "AchSecCode",
                BatchAmount: 30.22,
                BatchNumber: "batch_226_ach_12-30-2023",
                CfeeTransactions: [{ transactionTime: "2024-01-15T09:30:00Z" }],
                ConnectorName: "gp",
                Customer: {
                    AdditionalData: "AdditionalData",
                    BillingAddress1: "1111 West 1st Street",
                    BillingAddress2: "Suite 200",
                    BillingCity: "Miami",
                    BillingCountry: "US",
                    BillingEmail: "example@email.com",
                    BillingPhone: "5555555555",
                    BillingState: "FL",
                    BillingZip: "45567",
                    CompanyName: "Sunshine LLC",
                    customerId: 4440,
                    CustomerNumber: "3456-7645A",
                    customerStatus: 1,
                    FirstName: "John",
                    Identifiers: ['\\"firstname\\"', '\\"lastname\\"', '\\"email\\"', '\\"customId\\"'],
                    LastName: "Doe",
                    ShippingAddress1: "123 Walnut St",
                    ShippingAddress2: "STE 900",
                    ShippingCity: "Johnson City",
                    ShippingCountry: "US",
                    ShippingState: "TN",
                    ShippingZip: "37619",
                },
                DeviceId: "6c361c7d-674c-44cc-b790-382b75d1xxx",
                EntrypageId: 0,
                ExternalProcessorInformation: "[MER_xxxxxxxxxxxxxx]/[NNNNNNNNN]",
                FeeAmount: 1,
                GatewayTransId: "TRN_xwCAjQorWAYX1nAhAoHZVfN8iYHbI0",
                InvoiceData: {
                    AdditionalData: "AdditionalData",
                    attachments: [{}],
                    company: "ACME, INC",
                    discount: 10,
                    dutyAmount: 0,
                    firstName: "Chad",
                    freightAmount: 10,
                    frequency: "one-time",
                    invoiceAmount: 105,
                    invoiceDate: "2025-07-01",
                    invoiceDueDate: "2025-07-01",
                    invoiceEndDate: "2025-07-01",
                    invoiceNumber: "INV-2345",
                    invoiceStatus: 1,
                    invoiceType: 0,
                    items: [{ itemCost: 5, itemProductName: "Materials deposit", itemQty: 1 }],
                    lastName: "Mercia",
                    notes: "Example notes.",
                    paymentTerms: "PIA",
                    purchaseOrder: "PO-345",
                    shippingAddress1: "123 Walnut St",
                    shippingAddress2: "STE 900",
                    shippingCity: "Johnson City",
                    shippingCountry: "US",
                    shippingEmail: "example@email.com",
                    shippingFromZip: "30040",
                    shippingPhone: "5555555555",
                    shippingState: "TN",
                    shippingZip: "37619",
                    summaryCommodityCode: "501718",
                    tax: 2.05,
                    termsConditions: "Must be paid before work scheduled.",
                },
                Method: "ach",
                NetAmount: 3762.87,
                Operation: "Sale",
                OrderId: "O-5140",
                OrgId: 123,
                ParentOrgName: "PropertyManager Pro",
                PaymentData: {
                    AccountExp: "11/29",
                    accountId: "accountId",
                    AccountType: "visa",
                    AccountZip: "90210",
                    binData: {
                        binMatchedLength: "6",
                        binCardBrand: "Visa",
                        binCardType: "Credit",
                        binCardCategory: "PLATINUM",
                        binCardIssuer: "Bank of Example",
                        binCardIssuerCountry: "United States",
                        binCardIssuerCountryCodeA2: "US",
                        binCardIssuerCountryNumber: "840",
                        binCardIsRegulated: "false",
                        binCardUseCategory: "Consumer",
                        binCardIssuerCountryCodeA3: "USA",
                    },
                    HolderName: "Chad Mercia",
                    Initiator: "payor",
                    MaskedAccount: "4XXXXXXXX1111",
                    orderDescription: "Depost for materials for 123 Walnut St",
                    paymentDetails: { totalAmount: 100 },
                    Sequence: "subsequent",
                    SignatureData: "SignatureData",
                    StoredId: "1ec55af9-7b5a-4ff0-81ed-c12d2f95e135-4440",
                    StoredMethodUsageType: "subscription",
                },
                PaymentTransId: "226-fe55ec0348e34702bd91b4be198ce7ec",
                PayorId: 1551,
                PaypointDbaname: "Sunshine Gutters",
                PaypointEntryname: "d193cf9a46",
                PaypointId: 226,
                PaypointLegalname: "Sunshine Services, LLC",
                PendingFeeAmount: 2,
                RefundId: 0,
                ResponseData: {
                    authcode: "authcode",
                    avsresponse: "avsresponse",
                    avsresponse_text: "avsresponse_text",
                    cvvresponse: "cvvresponse",
                    cvvresponse_text: "cvvresponse_text",
                    emv_auth_response_data: "emv_auth_response_data",
                    orderid: "O-5140",
                    response: "response",
                    response_code: "XXX",
                    response_code_text: "Transaction was approved.",
                    responsetext: "CAPTURED",
                    transactionid: "TRN_XXXXXGOa87juzW",
                    type: "type",
                },
                ReturnedId: 0,
                ScheduleReference: 0,
                SettlementStatus: 2,
                Source: "api",
                splitFundingInstructions: [{}],
                TotalAmount: 30.22,
                TransactionEvents: [{}],
                TransactionTime: "2025-10-19T00:00:00Z",
                TransAdditionalData: { key: "value" },
                TransStatus: 1,
            },
            transactionTime: "2024-01-15T09:30:00Z",
        };
        server
            .mockEndpoint()
            .get("/ChargeBacks/read/1000000")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.chargeBacks.getChargeback(1000000);
        expect(response).toEqual({
            accountType: "visa",
            caseNumber: "TZ45678",
            chargebackDate: "2022-06-25T00:00:00Z",
            createdAt: "2022-07-01T15:00:01Z",
            customer: {
                AdditionalData: "AdditionalData",
                BillingAddress1: "1111 West 1st Street",
                BillingAddress2: "Suite 200",
                BillingCity: "Miami",
                BillingCountry: "US",
                BillingEmail: "example@email.com",
                BillingPhone: "5555555555",
                BillingState: "FL",
                BillingZip: "45567",
                CompanyName: "Sunshine LLC",
                customerId: 4440,
                CustomerNumber: "3456-7645A",
                customerStatus: 1,
                FirstName: "John",
                Identifiers: ['\\"firstname\\"', '\\"lastname\\"', '\\"email\\"', '\\"customId\\"'],
                LastName: "Doe",
                ShippingAddress1: "123 Walnut St",
                ShippingAddress2: "STE 900",
                ShippingCity: "Johnson City",
                ShippingCountry: "US",
                ShippingState: "TN",
                ShippingZip: "37619",
            },
            id: 201,
            lastFour: "6789",
            method: "card",
            netAmount: 3762.87,
            orderId: "O-5140",
            parentOrgName: "PropertyManager Pro",
            paymentData: {
                AccountExp: "11/29",
                accountId: "accountId",
                AccountType: "visa",
                AccountZip: "90210",
                binData: {
                    binMatchedLength: "6",
                    binCardBrand: "Visa",
                    binCardType: "Credit",
                    binCardCategory: "PLATINUM",
                    binCardIssuer: "Bank of Example",
                    binCardIssuerCountry: "United States",
                    binCardIssuerCountryCodeA2: "US",
                    binCardIssuerCountryNumber: "840",
                    binCardIsRegulated: "false",
                    binCardUseCategory: "Consumer",
                    binCardIssuerCountryCodeA3: "USA",
                },
                HolderName: "Chad Mercia",
                Initiator: "payor",
                MaskedAccount: "4XXXXXXXX1111",
                orderDescription: "Depost for materials for 123 Walnut St",
                paymentDetails: {
                    categories: [
                        {
                            amount: 1000,
                            label: "Deposit",
                        },
                    ],
                    checkImage: {
                        key: "value",
                    },
                    checkNumber: "107",
                    currency: "USD",
                    serviceFee: 0,
                    splitFunding: [{}],
                    totalAmount: 100,
                },
                Sequence: "subsequent",
                SignatureData: "SignatureData",
                StoredId: "1ec55af9-7b5a-4ff0-81ed-c12d2f95e135-4440",
                StoredMethodUsageType: "subscription",
            },
            PaymentId: "34-ggghtt5678xxxxxxx-654",
            paypointDbaname: "Sunshine Gutters",
            paypointEntryname: "d193cf9a46",
            paypointLegalname: "Sunshine Services, LLC",
            reason: "Buyer dispute",
            reasonCode: "reasonCode",
            referenceNumber: "referenceNumber",
            responses: [
                {
                    contactEmail: "example@email.com",
                    contactName: "John Doe",
                    createdAt: "2022-07-01T15:00:01Z",
                    id: 672,
                    notes: "any note here",
                },
            ],
            status: 1,
            transaction: {
                AchHolderType: "personal",
                AchSecCode: "AchSecCode",
                BatchAmount: 30.22,
                BatchNumber: "batch_226_ach_12-30-2023",
                CfeeTransactions: [
                    {
                        transactionTime: "2024-01-15T09:30:00Z",
                    },
                ],
                ConnectorName: "gp",
                Customer: {
                    AdditionalData: "AdditionalData",
                    BillingAddress1: "1111 West 1st Street",
                    BillingAddress2: "Suite 200",
                    BillingCity: "Miami",
                    BillingCountry: "US",
                    BillingEmail: "example@email.com",
                    BillingPhone: "5555555555",
                    BillingState: "FL",
                    BillingZip: "45567",
                    CompanyName: "Sunshine LLC",
                    customerId: 4440,
                    CustomerNumber: "3456-7645A",
                    customerStatus: 1,
                    FirstName: "John",
                    Identifiers: ['\\"firstname\\"', '\\"lastname\\"', '\\"email\\"', '\\"customId\\"'],
                    LastName: "Doe",
                    ShippingAddress1: "123 Walnut St",
                    ShippingAddress2: "STE 900",
                    ShippingCity: "Johnson City",
                    ShippingCountry: "US",
                    ShippingState: "TN",
                    ShippingZip: "37619",
                },
                DeviceId: "6c361c7d-674c-44cc-b790-382b75d1xxx",
                EntrypageId: 0,
                ExternalProcessorInformation: "[MER_xxxxxxxxxxxxxx]/[NNNNNNNNN]",
                FeeAmount: 1,
                GatewayTransId: "TRN_xwCAjQorWAYX1nAhAoHZVfN8iYHbI0",
                InvoiceData: {
                    AdditionalData: "AdditionalData",
                    attachments: [{}],
                    company: "ACME, INC",
                    discount: 10,
                    dutyAmount: 0,
                    firstName: "Chad",
                    freightAmount: 10,
                    frequency: "one-time",
                    invoiceAmount: 105,
                    invoiceDate: "2025-07-01",
                    invoiceDueDate: "2025-07-01",
                    invoiceEndDate: "2025-07-01",
                    invoiceNumber: "INV-2345",
                    invoiceStatus: 1,
                    invoiceType: 0,
                    items: [
                        {
                            itemCost: 5,
                            itemProductName: "Materials deposit",
                            itemQty: 1,
                        },
                    ],
                    lastName: "Mercia",
                    notes: "Example notes.",
                    paymentTerms: "PIA",
                    purchaseOrder: "PO-345",
                    shippingAddress1: "123 Walnut St",
                    shippingAddress2: "STE 900",
                    shippingCity: "Johnson City",
                    shippingCountry: "US",
                    shippingEmail: "example@email.com",
                    shippingFromZip: "30040",
                    shippingPhone: "5555555555",
                    shippingState: "TN",
                    shippingZip: "37619",
                    summaryCommodityCode: "501718",
                    tax: 2.05,
                    termsConditions: "Must be paid before work scheduled.",
                },
                Method: "ach",
                NetAmount: 3762.87,
                Operation: "Sale",
                OrderId: "O-5140",
                OrgId: 123,
                ParentOrgName: "PropertyManager Pro",
                PaymentData: {
                    AccountExp: "11/29",
                    accountId: "accountId",
                    AccountType: "visa",
                    AccountZip: "90210",
                    binData: {
                        binMatchedLength: "6",
                        binCardBrand: "Visa",
                        binCardType: "Credit",
                        binCardCategory: "PLATINUM",
                        binCardIssuer: "Bank of Example",
                        binCardIssuerCountry: "United States",
                        binCardIssuerCountryCodeA2: "US",
                        binCardIssuerCountryNumber: "840",
                        binCardIsRegulated: "false",
                        binCardUseCategory: "Consumer",
                        binCardIssuerCountryCodeA3: "USA",
                    },
                    HolderName: "Chad Mercia",
                    Initiator: "payor",
                    MaskedAccount: "4XXXXXXXX1111",
                    orderDescription: "Depost for materials for 123 Walnut St",
                    paymentDetails: {
                        totalAmount: 100,
                    },
                    Sequence: "subsequent",
                    SignatureData: "SignatureData",
                    StoredId: "1ec55af9-7b5a-4ff0-81ed-c12d2f95e135-4440",
                    StoredMethodUsageType: "subscription",
                },
                PaymentTransId: "226-fe55ec0348e34702bd91b4be198ce7ec",
                PayorId: 1551,
                PaypointDbaname: "Sunshine Gutters",
                PaypointEntryname: "d193cf9a46",
                PaypointId: 226,
                PaypointLegalname: "Sunshine Services, LLC",
                PendingFeeAmount: 2,
                RefundId: 0,
                ResponseData: {
                    authcode: "authcode",
                    avsresponse: "avsresponse",
                    avsresponse_text: "avsresponse_text",
                    cvvresponse: "cvvresponse",
                    cvvresponse_text: "cvvresponse_text",
                    emv_auth_response_data: "emv_auth_response_data",
                    orderid: "O-5140",
                    response: "response",
                    response_code: "XXX",
                    response_code_text: "Transaction was approved.",
                    responsetext: "CAPTURED",
                    transactionid: "TRN_XXXXXGOa87juzW",
                    type: "type",
                },
                ReturnedId: 0,
                ScheduleReference: 0,
                SettlementStatus: 2,
                Source: "api",
                splitFundingInstructions: [{}],
                TotalAmount: 30.22,
                TransactionEvents: [{}],
                TransactionTime: "2025-10-19T00:00:00Z",
                TransAdditionalData: {
                    key: "value",
                },
                TransStatus: 1,
            },
            transactionTime: "2024-01-15T09:30:00Z",
        });
    });

    test("GetChargeback (738cdf82)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .get("/ChargeBacks/read/1000000")
            .respondWith()
            .statusCode(400)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.getChargeback(1000000);
        }).rejects.toThrow(
            new Payabli.BadRequestError({
                key: "value",
            }),
        );
    });

    test("GetChargeback (85b4ce1a)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .get("/ChargeBacks/read/1000000")
            .respondWith()
            .statusCode(401)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.getChargeback(1000000);
        }).rejects.toThrow(
            new Payabli.UnauthorizedError({
                key: "value",
            }),
        );
    });

    test("GetChargeback (236f2dee)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { key: "value" };
        server
            .mockEndpoint()
            .get("/ChargeBacks/read/1000000")
            .respondWith()
            .statusCode(500)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.getChargeback(1000000);
        }).rejects.toThrow(
            new Payabli.InternalServerError({
                key: "value",
            }),
        );
    });

    test("GetChargeback (29c5d19)", async () => {
        const server = mockServerPool.createServer();
        const client = new PayabliClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = { isSuccess: undefined, responseData: undefined, responseText: undefined };
        server
            .mockEndpoint()
            .get("/ChargeBacks/read/1000000")
            .respondWith()
            .statusCode(503)
            .jsonBody(rawResponseBody)
            .build();

        await expect(async () => {
            return await client.chargeBacks.getChargeback(1000000);
        }).rejects.toThrow(
            new Payabli.ServiceUnavailableError({
                isSuccess: undefined,
                responseData: undefined,
                responseText: undefined,
            }),
        );
    });
});
